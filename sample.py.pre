pyp
from sample_utils import typed_expression
ypy

cdef class Mat:
    cdef CMat[dtype] matinternal
    int dtype

    def sum(Mat self):
        # Inline preprcoessor expression. Executes a function.
        # Generally inline expressions should be one line,
        # But can be extended to multiple where all the data
        # on second line and following will be captured into
        # a string argument passed as last positional argument
        # to a function
        pypinline typed_expression(pyp, "self.matinternal", "CMat",
            print('siema')
            return WrapMat(TYPED_EXPRESSION.sum())
        ypy


pyprepeat OP_NAME in ['square', 'log', 'exp']
    @staticmethod
    def OP_NAME(Mat mat):
        pypinline type_repeat(pyp,
        cdef CMat[TYPE_NAME] TYPED(out)
        ypy
        pypinline typed_expression(pyp, "self.matinternal", "CMat",
            print('OP_NAME')
            return WrapMat(TYPED_EXPRESSION.sum())
        ypy
ypyrepeat
